name: 'Publish'

permissions:
  actions: read
  contents: write

on:
  workflow_dispatch:
    inputs:
      pack:
        description: create dotnet tool (NuGet package) and push it to nuget.org
        required: false
        type: boolean
      app:
        description: publish standalone self-contained application and create GitHub release
        required: false
        type: boolean

jobs:
  build:
    name: 'Build & Publish'

    # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 0 => all history for all branches and tags
          submodules: true

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.100

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: /home/runner/.nuget/packages
          key: packages-${{ runner.os }}-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: packages-${{ runner.os }}-

      - name: Execute tests
        run: dotnet test -c Release --results-directory ./artifacts/trx --logger trx -v minimal --nologo

      - name: Testing exit code
        run: exit 1

      - name: Determine semantic version
        id: semver
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: ""
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          search_commit_body: true
          version_format: "${major}.${minor}.${patch}"

      - name: Test2
        if: inputs.pack == 'true' || inputs.pack == '1' || inputs.app == 'true' || inputs.app == '1'
        run: |
          echo AAAA

#      - name: Tag source with semantic version
#        if: inputs.pack == 'true' || inputs.pack == '1' || inputs.app == 'true' || inputs.app == '1'
#        run: |
#          git tag "${{ steps.semver.outputs.version }}"
#          git push origin "${{ steps.semver.outputs.version }}"
#
#      - name: Pack dotnet tool & push to nuget.org
#        if: inputs.pack == 'true' || inputs.pack == '1'
#        run: ./run.sh -t pack -v "${{ steps.semver.outputs.version }}" -p "${{ secrets.MDREPORT_API_KEY }}"
#
#      - name: Publish standalone application
#        if: inputs.app == 'true' || inputs.app == '1'
#        run: ./run.sh -t publish -v "${{ steps.semver.outputs.version }}" -z